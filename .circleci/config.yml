version: 2.1
orbs:
  node: circleci/node@5

jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm  # Changed to npm
      - run:
          command: npm install jest-junit  # Install jest-junit using npm
      - run:
          name: Run tests
          command: npm test -- --ci --runInBand --reporters=default --reporters=jest-junit  # Use npm test
      - store_test_results:
          path: ./test-results/

  build-node:
    # Build node project
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: yarn run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build

  sonar-analysis:
    # Run SonarQube analysis
    docker:
      - image: sonarsource/sonar-scanner-cli:latest  
    steps:
      - checkout
      - run:
          # Set the SonarQube project key, host URL and token as environment variables in CircleCI
          name: Run SonarQube analysis
          command: |
            sonar-scanner \
              -Dsonar.projectKey=$SONAR_PROJECT_KEY \
              -Dsonar.sources=./src \
              -Dsonar.host.url=$SONAR_HOST_URL \
              -Dsonar.login=$SONAR_TOKEN

workflows:
  build-test-and-sonar:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
          filters:
            branches:
              only: main
      - sonar-analysis:
          requires:
            - test-node
          filters:
            branches:
              only:
                - main
                - feature/*
                - release/*
